// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ingestion.proto
// Protobuf C++ Version: 5.26.1

#include "ingestion.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace dp {
namespace service {
namespace ingestion {

inline constexpr RegisterProviderResponse_RegistrationResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : providerid_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterProviderResponse_RegistrationResult::RegisterProviderResponse_RegistrationResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RegisterProviderResponse_RegistrationResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterProviderResponse_RegistrationResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterProviderResponse_RegistrationResultDefaultTypeInternal() {}
  union {
    RegisterProviderResponse_RegistrationResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterProviderResponse_RegistrationResultDefaultTypeInternal _RegisterProviderResponse_RegistrationResult_default_instance_;

inline constexpr IngestDataResponse_AckResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : numrows_{0u},
        numcolumns_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR IngestDataResponse_AckResult::IngestDataResponse_AckResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IngestDataResponse_AckResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IngestDataResponse_AckResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IngestDataResponse_AckResultDefaultTypeInternal() {}
  union {
    IngestDataResponse_AckResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IngestDataResponse_AckResultDefaultTypeInternal _IngestDataResponse_AckResult_default_instance_;

inline constexpr RegisterProviderResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        responsetime_{nullptr},
        result_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterProviderResponse::RegisterProviderResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RegisterProviderResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterProviderResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterProviderResponseDefaultTypeInternal() {}
  union {
    RegisterProviderResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterProviderResponseDefaultTypeInternal _RegisterProviderResponse_default_instance_;

inline constexpr RegisterProviderRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        attributes_{},
        providername_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        requesttime_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterProviderRequest::RegisterProviderRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RegisterProviderRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterProviderRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterProviderRequestDefaultTypeInternal() {}
  union {
    RegisterProviderRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterProviderRequestDefaultTypeInternal _RegisterProviderRequest_default_instance_;

inline constexpr IngestDataResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        clientrequestid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        responsetime_{nullptr},
        providerid_{0u},
        result_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR IngestDataResponse::IngestDataResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IngestDataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IngestDataResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IngestDataResponseDefaultTypeInternal() {}
  union {
    IngestDataResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IngestDataResponseDefaultTypeInternal _IngestDataResponse_default_instance_;

inline constexpr IngestDataRequest_IngestionDataFrame::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        datacolumns_{},
        datatimestamps_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR IngestDataRequest_IngestionDataFrame::IngestDataRequest_IngestionDataFrame(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IngestDataRequest_IngestionDataFrameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IngestDataRequest_IngestionDataFrameDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IngestDataRequest_IngestionDataFrameDefaultTypeInternal() {}
  union {
    IngestDataRequest_IngestionDataFrame _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IngestDataRequest_IngestionDataFrameDefaultTypeInternal _IngestDataRequest_IngestionDataFrame_default_instance_;

inline constexpr IngestDataRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        attributes_{},
        clientrequestid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        requesttime_{nullptr},
        eventmetadata_{nullptr},
        ingestiondataframe_{nullptr},
        providerid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR IngestDataRequest::IngestDataRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IngestDataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IngestDataRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IngestDataRequestDefaultTypeInternal() {}
  union {
    IngestDataRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IngestDataRequestDefaultTypeInternal _IngestDataRequest_default_instance_;
}  // namespace ingestion
}  // namespace service
}  // namespace dp
static ::_pb::Metadata file_level_metadata_ingestion_2eproto[7];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ingestion_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ingestion_2eproto = nullptr;
const ::uint32_t
    TableStruct_ingestion_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::RegisterProviderRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::RegisterProviderRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::RegisterProviderRequest, _impl_.providername_),
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::RegisterProviderRequest, _impl_.attributes_),
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::RegisterProviderRequest, _impl_.requesttime_),
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::RegisterProviderResponse_RegistrationResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::RegisterProviderResponse_RegistrationResult, _impl_.providerid_),
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::RegisterProviderResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::RegisterProviderResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::RegisterProviderResponse, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::RegisterProviderResponse, _impl_.responsetime_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::RegisterProviderResponse, _impl_.result_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataRequest_IngestionDataFrame, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataRequest_IngestionDataFrame, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataRequest_IngestionDataFrame, _impl_.datatimestamps_),
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataRequest_IngestionDataFrame, _impl_.datacolumns_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataRequest, _impl_.providerid_),
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataRequest, _impl_.clientrequestid_),
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataRequest, _impl_.requesttime_),
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataRequest, _impl_.attributes_),
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataRequest, _impl_.eventmetadata_),
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataRequest, _impl_.ingestiondataframe_),
        ~0u,
        ~0u,
        0,
        ~0u,
        1,
        2,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataResponse_AckResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataResponse_AckResult, _impl_.numrows_),
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataResponse_AckResult, _impl_.numcolumns_),
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataResponse, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataResponse, _impl_.providerid_),
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataResponse, _impl_.clientrequestid_),
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataResponse, _impl_.responsetime_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataResponse, _impl_.result_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::dp::service::ingestion::RegisterProviderRequest)},
        {14, -1, -1, sizeof(::dp::service::ingestion::RegisterProviderResponse_RegistrationResult)},
        {23, 35, -1, sizeof(::dp::service::ingestion::RegisterProviderResponse)},
        {38, 48, -1, sizeof(::dp::service::ingestion::IngestDataRequest_IngestionDataFrame)},
        {50, 64, -1, sizeof(::dp::service::ingestion::IngestDataRequest)},
        {70, -1, -1, sizeof(::dp::service::ingestion::IngestDataResponse_AckResult)},
        {80, 94, -1, sizeof(::dp::service::ingestion::IngestDataResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::dp::service::ingestion::_RegisterProviderRequest_default_instance_._instance,
    &::dp::service::ingestion::_RegisterProviderResponse_RegistrationResult_default_instance_._instance,
    &::dp::service::ingestion::_RegisterProviderResponse_default_instance_._instance,
    &::dp::service::ingestion::_IngestDataRequest_IngestionDataFrame_default_instance_._instance,
    &::dp::service::ingestion::_IngestDataRequest_default_instance_._instance,
    &::dp::service::ingestion::_IngestDataResponse_AckResult_default_instance_._instance,
    &::dp::service::ingestion::_IngestDataResponse_default_instance_._instance,
};
const char descriptor_table_protodef_ingestion_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017ingestion.proto\022\024dp.service.ingestion\032"
    "\014common.proto\"p\n\027RegisterProviderRequest"
    "\022\024\n\014providerName\030\001 \001(\t\022\036\n\nattributes\030\002 \003"
    "(\0132\n.Attribute\022\037\n\013requestTime\030\003 \001(\0132\n.Ti"
    "mestamp\"\202\002\n\030RegisterProviderResponse\022 \n\014"
    "responseTime\030\001 \001(\0132\n.Timestamp\022/\n\021except"
    "ionalResult\030\n \001(\0132\022.ExceptionalResultH\000\022"
    "_\n\022registrationResult\030\013 \001(\0132A.dp.service"
    ".ingestion.RegisterProviderResponse.Regi"
    "strationResultH\000\032(\n\022RegistrationResult\022\022"
    "\n\nproviderId\030\001 \001(\rB\010\n\006result\"\341\002\n\021IngestD"
    "ataRequest\022\022\n\nproviderId\030\001 \001(\r\022\027\n\017client"
    "RequestId\030\002 \001(\t\022\037\n\013requestTime\030\003 \001(\0132\n.T"
    "imestamp\022\036\n\nattributes\030\004 \003(\0132\n.Attribute"
    "\022%\n\reventMetadata\030\005 \001(\0132\016.EventMetadata\022"
    "V\n\022ingestionDataFrame\030\006 \001(\0132:.dp.service"
    ".ingestion.IngestDataRequest.IngestionDa"
    "taFrame\032_\n\022IngestionDataFrame\022\'\n\016dataTim"
    "estamps\030\001 \001(\0132\017.DataTimestamps\022 \n\013dataCo"
    "lumns\030\002 \003(\0132\013.DataColumn\"\231\002\n\022IngestDataR"
    "esponse\022\022\n\nproviderId\030\001 \001(\r\022\027\n\017clientReq"
    "uestId\030\002 \001(\t\022 \n\014responseTime\030\003 \001(\0132\n.Tim"
    "estamp\022/\n\021exceptionalResult\030\n \001(\0132\022.Exce"
    "ptionalResultH\000\022G\n\tackResult\030\013 \001(\01322.dp."
    "service.ingestion.IngestDataResponse.Ack"
    "ResultH\000\0320\n\tAckResult\022\017\n\007numRows\030\001 \001(\r\022\022"
    "\n\nnumColumns\030\002 \001(\rB\010\n\006result2\323\002\n\022DpInges"
    "tionService\022q\n\020registerProvider\022-.dp.ser"
    "vice.ingestion.RegisterProviderRequest\032."
    ".dp.service.ingestion.RegisterProviderRe"
    "sponse\022_\n\ningestData\022\'.dp.service.ingest"
    "ion.IngestDataRequest\032(.dp.service.inges"
    "tion.IngestDataResponse\022i\n\020ingestDataStr"
    "eam\022\'.dp.service.ingestion.IngestDataReq"
    "uest\032(.dp.service.ingestion.IngestDataRe"
    "sponse(\0010\001B&\n\"com.ospreydcs.dp.grpc.v1.i"
    "ngestionP\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ingestion_2eproto_deps[1] =
    {
        &::descriptor_table_common_2eproto,
};
static ::absl::once_flag descriptor_table_ingestion_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ingestion_2eproto = {
    false,
    false,
    1458,
    descriptor_table_protodef_ingestion_2eproto,
    "ingestion.proto",
    &descriptor_table_ingestion_2eproto_once,
    descriptor_table_ingestion_2eproto_deps,
    1,
    7,
    schemas,
    file_default_instances,
    TableStruct_ingestion_2eproto::offsets,
    file_level_metadata_ingestion_2eproto,
    file_level_enum_descriptors_ingestion_2eproto,
    file_level_service_descriptors_ingestion_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ingestion_2eproto_getter() {
  return &descriptor_table_ingestion_2eproto;
}
namespace dp {
namespace service {
namespace ingestion {
// ===================================================================

class RegisterProviderRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RegisterProviderRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RegisterProviderRequest, _impl_._has_bits_);
};

void RegisterProviderRequest::clear_attributes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.attributes_.Clear();
}
void RegisterProviderRequest::clear_requesttime() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.requesttime_ != nullptr) _impl_.requesttime_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RegisterProviderRequest::RegisterProviderRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dp.service.ingestion.RegisterProviderRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterProviderRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        attributes_{visibility, arena, from.attributes_},
        providername_(arena, from.providername_) {}

RegisterProviderRequest::RegisterProviderRequest(
    ::google::protobuf::Arena* arena,
    const RegisterProviderRequest& from)
    : ::google::protobuf::Message(arena) {
  RegisterProviderRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.requesttime_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::Timestamp>(
                              arena, *from._impl_.requesttime_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:dp.service.ingestion.RegisterProviderRequest)
}
inline PROTOBUF_NDEBUG_INLINE RegisterProviderRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        attributes_{visibility, arena},
        providername_(arena) {}

inline void RegisterProviderRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.requesttime_ = {};
}
RegisterProviderRequest::~RegisterProviderRequest() {
  // @@protoc_insertion_point(destructor:dp.service.ingestion.RegisterProviderRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RegisterProviderRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.providername_.Destroy();
  delete _impl_.requesttime_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RegisterProviderRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RegisterProviderRequest, _impl_._cached_size_),
              false,
          },
          &RegisterProviderRequest::MergeImpl,
          &RegisterProviderRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void RegisterProviderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dp.service.ingestion.RegisterProviderRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.attributes_.Clear();
  _impl_.providername_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.requesttime_ != nullptr);
    _impl_.requesttime_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RegisterProviderRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 65, 2> RegisterProviderRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterProviderRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RegisterProviderRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dp::service::ingestion::RegisterProviderRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string providerName = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterProviderRequest, _impl_.providername_)}},
    // repeated .Attribute attributes = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterProviderRequest, _impl_.attributes_)}},
    // .Timestamp requestTime = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(RegisterProviderRequest, _impl_.requesttime_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string providerName = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterProviderRequest, _impl_.providername_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .Attribute attributes = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterProviderRequest, _impl_.attributes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .Timestamp requestTime = 3;
    {PROTOBUF_FIELD_OFFSET(RegisterProviderRequest, _impl_.requesttime_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Attribute>()},
    {::_pbi::TcParser::GetTable<::Timestamp>()},
  }}, {{
    "\54\14\0\0\0\0\0\0"
    "dp.service.ingestion.RegisterProviderRequest"
    "providerName"
  }},
};

::uint8_t* RegisterProviderRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dp.service.ingestion.RegisterProviderRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string providerName = 1;
  if (!this->_internal_providername().empty()) {
    const std::string& _s = this->_internal_providername();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dp.service.ingestion.RegisterProviderRequest.providerName");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .Attribute attributes = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_attributes_size());
       i < n; i++) {
    const auto& repfield = this->_internal_attributes().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .Timestamp requestTime = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.requesttime_, _impl_.requesttime_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dp.service.ingestion.RegisterProviderRequest)
  return target;
}

::size_t RegisterProviderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dp.service.ingestion.RegisterProviderRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Attribute attributes = 2;
  total_size += 1UL * this->_internal_attributes_size();
  for (const auto& msg : this->_internal_attributes()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string providerName = 1;
  if (!this->_internal_providername().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_providername());
  }

  // .Timestamp requestTime = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.requesttime_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RegisterProviderRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterProviderRequest*>(&to_msg);
  auto& from = static_cast<const RegisterProviderRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dp.service.ingestion.RegisterProviderRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_attributes()->MergeFrom(
      from._internal_attributes());
  if (!from._internal_providername().empty()) {
    _this->_internal_set_providername(from._internal_providername());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.requesttime_ != nullptr);
    if (_this->_impl_.requesttime_ == nullptr) {
      _this->_impl_.requesttime_ =
          ::google::protobuf::Message::CopyConstruct<::Timestamp>(arena, *from._impl_.requesttime_);
    } else {
      _this->_impl_.requesttime_->MergeFrom(*from._impl_.requesttime_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterProviderRequest::CopyFrom(const RegisterProviderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dp.service.ingestion.RegisterProviderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RegisterProviderRequest::IsInitialized() const {
  return true;
}

void RegisterProviderRequest::InternalSwap(RegisterProviderRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.attributes_.InternalSwap(&other->_impl_.attributes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.providername_, &other->_impl_.providername_, arena);
  swap(_impl_.requesttime_, other->_impl_.requesttime_);
}

::google::protobuf::Metadata RegisterProviderRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_ingestion_2eproto_getter,
                                   &descriptor_table_ingestion_2eproto_once,
                                   file_level_metadata_ingestion_2eproto[0]);
}
// ===================================================================

class RegisterProviderResponse_RegistrationResult::_Internal {
 public:
};

RegisterProviderResponse_RegistrationResult::RegisterProviderResponse_RegistrationResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dp.service.ingestion.RegisterProviderResponse.RegistrationResult)
}
RegisterProviderResponse_RegistrationResult::RegisterProviderResponse_RegistrationResult(
    ::google::protobuf::Arena* arena, const RegisterProviderResponse_RegistrationResult& from)
    : RegisterProviderResponse_RegistrationResult(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RegisterProviderResponse_RegistrationResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RegisterProviderResponse_RegistrationResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.providerid_ = {};
}
RegisterProviderResponse_RegistrationResult::~RegisterProviderResponse_RegistrationResult() {
  // @@protoc_insertion_point(destructor:dp.service.ingestion.RegisterProviderResponse.RegistrationResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RegisterProviderResponse_RegistrationResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RegisterProviderResponse_RegistrationResult::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RegisterProviderResponse_RegistrationResult, _impl_._cached_size_),
              false,
          },
          &RegisterProviderResponse_RegistrationResult::MergeImpl,
          &RegisterProviderResponse_RegistrationResult::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void RegisterProviderResponse_RegistrationResult::Clear() {
// @@protoc_insertion_point(message_clear_start:dp.service.ingestion.RegisterProviderResponse.RegistrationResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.providerid_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RegisterProviderResponse_RegistrationResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RegisterProviderResponse_RegistrationResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RegisterProviderResponse_RegistrationResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dp::service::ingestion::RegisterProviderResponse_RegistrationResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 providerId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RegisterProviderResponse_RegistrationResult, _impl_.providerid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterProviderResponse_RegistrationResult, _impl_.providerid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 providerId = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterProviderResponse_RegistrationResult, _impl_.providerid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RegisterProviderResponse_RegistrationResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dp.service.ingestion.RegisterProviderResponse.RegistrationResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 providerId = 1;
  if (this->_internal_providerid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_providerid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dp.service.ingestion.RegisterProviderResponse.RegistrationResult)
  return target;
}

::size_t RegisterProviderResponse_RegistrationResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dp.service.ingestion.RegisterProviderResponse.RegistrationResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 providerId = 1;
  if (this->_internal_providerid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_providerid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RegisterProviderResponse_RegistrationResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterProviderResponse_RegistrationResult*>(&to_msg);
  auto& from = static_cast<const RegisterProviderResponse_RegistrationResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dp.service.ingestion.RegisterProviderResponse.RegistrationResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_providerid() != 0) {
    _this->_impl_.providerid_ = from._impl_.providerid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterProviderResponse_RegistrationResult::CopyFrom(const RegisterProviderResponse_RegistrationResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dp.service.ingestion.RegisterProviderResponse.RegistrationResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RegisterProviderResponse_RegistrationResult::IsInitialized() const {
  return true;
}

void RegisterProviderResponse_RegistrationResult::InternalSwap(RegisterProviderResponse_RegistrationResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.providerid_, other->_impl_.providerid_);
}

::google::protobuf::Metadata RegisterProviderResponse_RegistrationResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_ingestion_2eproto_getter,
                                   &descriptor_table_ingestion_2eproto_once,
                                   file_level_metadata_ingestion_2eproto[1]);
}
// ===================================================================

class RegisterProviderResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RegisterProviderResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RegisterProviderResponse, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::RegisterProviderResponse, _impl_._oneof_case_);
};

void RegisterProviderResponse::clear_responsetime() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.responsetime_ != nullptr) _impl_.responsetime_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void RegisterProviderResponse::set_allocated_exceptionalresult(::ExceptionalResult* exceptionalresult) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_result();
  if (exceptionalresult) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(exceptionalresult)->GetArena();
    if (message_arena != submessage_arena) {
      exceptionalresult = ::google::protobuf::internal::GetOwnedMessage(message_arena, exceptionalresult, submessage_arena);
    }
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ = exceptionalresult;
  }
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.RegisterProviderResponse.exceptionalResult)
}
void RegisterProviderResponse::clear_exceptionalresult() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (result_case() == kExceptionalResult) {
    if (GetArena() == nullptr) {
      delete _impl_.result_.exceptionalresult_;
    }
    clear_has_result();
  }
}
void RegisterProviderResponse::set_allocated_registrationresult(::dp::service::ingestion::RegisterProviderResponse_RegistrationResult* registrationresult) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_result();
  if (registrationresult) {
    ::google::protobuf::Arena* submessage_arena = registrationresult->GetArena();
    if (message_arena != submessage_arena) {
      registrationresult = ::google::protobuf::internal::GetOwnedMessage(message_arena, registrationresult, submessage_arena);
    }
    set_has_registrationresult();
    _impl_.result_.registrationresult_ = registrationresult;
  }
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.RegisterProviderResponse.registrationResult)
}
RegisterProviderResponse::RegisterProviderResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dp.service.ingestion.RegisterProviderResponse)
}
inline PROTOBUF_NDEBUG_INLINE RegisterProviderResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        result_{},
        _oneof_case_{from._oneof_case_[0]} {}

RegisterProviderResponse::RegisterProviderResponse(
    ::google::protobuf::Arena* arena,
    const RegisterProviderResponse& from)
    : ::google::protobuf::Message(arena) {
  RegisterProviderResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.responsetime_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::Timestamp>(
                              arena, *from._impl_.responsetime_)
                        : nullptr;
  switch (result_case()) {
    case RESULT_NOT_SET:
      break;
      case kExceptionalResult:
        _impl_.result_.exceptionalresult_ = ::google::protobuf::Message::CopyConstruct<::ExceptionalResult>(arena, *from._impl_.result_.exceptionalresult_);
        break;
      case kRegistrationResult:
        _impl_.result_.registrationresult_ = ::google::protobuf::Message::CopyConstruct<::dp::service::ingestion::RegisterProviderResponse_RegistrationResult>(arena, *from._impl_.result_.registrationresult_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:dp.service.ingestion.RegisterProviderResponse)
}
inline PROTOBUF_NDEBUG_INLINE RegisterProviderResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        result_{},
        _oneof_case_{} {}

inline void RegisterProviderResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.responsetime_ = {};
}
RegisterProviderResponse::~RegisterProviderResponse() {
  // @@protoc_insertion_point(destructor:dp.service.ingestion.RegisterProviderResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RegisterProviderResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.responsetime_;
  if (has_result()) {
    clear_result();
  }
  _impl_.~Impl_();
}

void RegisterProviderResponse::clear_result() {
// @@protoc_insertion_point(one_of_clear_start:dp.service.ingestion.RegisterProviderResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (result_case()) {
    case kExceptionalResult: {
      if (GetArena() == nullptr) {
        delete _impl_.result_.exceptionalresult_;
      }
      break;
    }
    case kRegistrationResult: {
      if (GetArena() == nullptr) {
        delete _impl_.result_.registrationresult_;
      }
      break;
    }
    case RESULT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESULT_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
RegisterProviderResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RegisterProviderResponse, _impl_._cached_size_),
              false,
          },
          &RegisterProviderResponse::MergeImpl,
          &RegisterProviderResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void RegisterProviderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dp.service.ingestion.RegisterProviderResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.responsetime_ != nullptr);
    _impl_.responsetime_->Clear();
  }
  clear_result();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RegisterProviderResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2> RegisterProviderResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterProviderResponse, _impl_._has_bits_),
    0, // no _extensions_
    11, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965758,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RegisterProviderResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dp::service::ingestion::RegisterProviderResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .Timestamp responseTime = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterProviderResponse, _impl_.responsetime_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Timestamp responseTime = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterProviderResponse, _impl_.responsetime_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ExceptionalResult exceptionalResult = 10;
    {PROTOBUF_FIELD_OFFSET(RegisterProviderResponse, _impl_.result_.exceptionalresult_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dp.service.ingestion.RegisterProviderResponse.RegistrationResult registrationResult = 11;
    {PROTOBUF_FIELD_OFFSET(RegisterProviderResponse, _impl_.result_.registrationresult_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Timestamp>()},
    {::_pbi::TcParser::GetTable<::ExceptionalResult>()},
    {::_pbi::TcParser::GetTable<::dp::service::ingestion::RegisterProviderResponse_RegistrationResult>()},
  }}, {{
  }},
};

::uint8_t* RegisterProviderResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dp.service.ingestion.RegisterProviderResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .Timestamp responseTime = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.responsetime_, _impl_.responsetime_->GetCachedSize(), target, stream);
  }

  switch (result_case()) {
    case kExceptionalResult: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          10, *_impl_.result_.exceptionalresult_, _impl_.result_.exceptionalresult_->GetCachedSize(), target, stream);
      break;
    }
    case kRegistrationResult: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          11, *_impl_.result_.registrationresult_, _impl_.result_.registrationresult_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dp.service.ingestion.RegisterProviderResponse)
  return target;
}

::size_t RegisterProviderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dp.service.ingestion.RegisterProviderResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Timestamp responseTime = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.responsetime_);
  }

  switch (result_case()) {
    // .ExceptionalResult exceptionalResult = 10;
    case kExceptionalResult: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.result_.exceptionalresult_);
      break;
    }
    // .dp.service.ingestion.RegisterProviderResponse.RegistrationResult registrationResult = 11;
    case kRegistrationResult: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.result_.registrationresult_);
      break;
    }
    case RESULT_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RegisterProviderResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterProviderResponse*>(&to_msg);
  auto& from = static_cast<const RegisterProviderResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dp.service.ingestion.RegisterProviderResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.responsetime_ != nullptr);
    if (_this->_impl_.responsetime_ == nullptr) {
      _this->_impl_.responsetime_ =
          ::google::protobuf::Message::CopyConstruct<::Timestamp>(arena, *from._impl_.responsetime_);
    } else {
      _this->_impl_.responsetime_->MergeFrom(*from._impl_.responsetime_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_result();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kExceptionalResult: {
        if (oneof_needs_init) {
          _this->_impl_.result_.exceptionalresult_ =
              ::google::protobuf::Message::CopyConstruct<::ExceptionalResult>(arena, *from._impl_.result_.exceptionalresult_);
        } else {
          _this->_impl_.result_.exceptionalresult_->MergeFrom(from._internal_exceptionalresult());
        }
        break;
      }
      case kRegistrationResult: {
        if (oneof_needs_init) {
          _this->_impl_.result_.registrationresult_ =
              ::google::protobuf::Message::CopyConstruct<::dp::service::ingestion::RegisterProviderResponse_RegistrationResult>(arena, *from._impl_.result_.registrationresult_);
        } else {
          _this->_impl_.result_.registrationresult_->MergeFrom(from._internal_registrationresult());
        }
        break;
      }
      case RESULT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterProviderResponse::CopyFrom(const RegisterProviderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dp.service.ingestion.RegisterProviderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RegisterProviderResponse::IsInitialized() const {
  return true;
}

void RegisterProviderResponse::InternalSwap(RegisterProviderResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.responsetime_, other->_impl_.responsetime_);
  swap(_impl_.result_, other->_impl_.result_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata RegisterProviderResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_ingestion_2eproto_getter,
                                   &descriptor_table_ingestion_2eproto_once,
                                   file_level_metadata_ingestion_2eproto[2]);
}
// ===================================================================

class IngestDataRequest_IngestionDataFrame::_Internal {
 public:
  using HasBits = decltype(std::declval<IngestDataRequest_IngestionDataFrame>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(IngestDataRequest_IngestionDataFrame, _impl_._has_bits_);
};

void IngestDataRequest_IngestionDataFrame::clear_datatimestamps() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.datatimestamps_ != nullptr) _impl_.datatimestamps_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void IngestDataRequest_IngestionDataFrame::clear_datacolumns() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.datacolumns_.Clear();
}
IngestDataRequest_IngestionDataFrame::IngestDataRequest_IngestionDataFrame(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dp.service.ingestion.IngestDataRequest.IngestionDataFrame)
}
inline PROTOBUF_NDEBUG_INLINE IngestDataRequest_IngestionDataFrame::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        datacolumns_{visibility, arena, from.datacolumns_} {}

IngestDataRequest_IngestionDataFrame::IngestDataRequest_IngestionDataFrame(
    ::google::protobuf::Arena* arena,
    const IngestDataRequest_IngestionDataFrame& from)
    : ::google::protobuf::Message(arena) {
  IngestDataRequest_IngestionDataFrame* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.datatimestamps_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::DataTimestamps>(
                              arena, *from._impl_.datatimestamps_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:dp.service.ingestion.IngestDataRequest.IngestionDataFrame)
}
inline PROTOBUF_NDEBUG_INLINE IngestDataRequest_IngestionDataFrame::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        datacolumns_{visibility, arena} {}

inline void IngestDataRequest_IngestionDataFrame::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.datatimestamps_ = {};
}
IngestDataRequest_IngestionDataFrame::~IngestDataRequest_IngestionDataFrame() {
  // @@protoc_insertion_point(destructor:dp.service.ingestion.IngestDataRequest.IngestionDataFrame)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IngestDataRequest_IngestionDataFrame::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.datatimestamps_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
IngestDataRequest_IngestionDataFrame::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(IngestDataRequest_IngestionDataFrame, _impl_._cached_size_),
              false,
          },
          &IngestDataRequest_IngestionDataFrame::MergeImpl,
          &IngestDataRequest_IngestionDataFrame::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void IngestDataRequest_IngestionDataFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:dp.service.ingestion.IngestDataRequest.IngestionDataFrame)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.datacolumns_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.datatimestamps_ != nullptr);
    _impl_.datatimestamps_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* IngestDataRequest_IngestionDataFrame::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> IngestDataRequest_IngestionDataFrame::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(IngestDataRequest_IngestionDataFrame, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_IngestDataRequest_IngestionDataFrame_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dp::service::ingestion::IngestDataRequest_IngestionDataFrame>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DataColumn dataColumns = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(IngestDataRequest_IngestionDataFrame, _impl_.datacolumns_)}},
    // .DataTimestamps dataTimestamps = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(IngestDataRequest_IngestionDataFrame, _impl_.datatimestamps_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .DataTimestamps dataTimestamps = 1;
    {PROTOBUF_FIELD_OFFSET(IngestDataRequest_IngestionDataFrame, _impl_.datatimestamps_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DataColumn dataColumns = 2;
    {PROTOBUF_FIELD_OFFSET(IngestDataRequest_IngestionDataFrame, _impl_.datacolumns_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DataTimestamps>()},
    {::_pbi::TcParser::GetTable<::DataColumn>()},
  }}, {{
  }},
};

::uint8_t* IngestDataRequest_IngestionDataFrame::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dp.service.ingestion.IngestDataRequest.IngestionDataFrame)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .DataTimestamps dataTimestamps = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.datatimestamps_, _impl_.datatimestamps_->GetCachedSize(), target, stream);
  }

  // repeated .DataColumn dataColumns = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_datacolumns_size());
       i < n; i++) {
    const auto& repfield = this->_internal_datacolumns().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dp.service.ingestion.IngestDataRequest.IngestionDataFrame)
  return target;
}

::size_t IngestDataRequest_IngestionDataFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dp.service.ingestion.IngestDataRequest.IngestionDataFrame)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .DataColumn dataColumns = 2;
  total_size += 1UL * this->_internal_datacolumns_size();
  for (const auto& msg : this->_internal_datacolumns()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .DataTimestamps dataTimestamps = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.datatimestamps_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void IngestDataRequest_IngestionDataFrame::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IngestDataRequest_IngestionDataFrame*>(&to_msg);
  auto& from = static_cast<const IngestDataRequest_IngestionDataFrame&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dp.service.ingestion.IngestDataRequest.IngestionDataFrame)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_datacolumns()->MergeFrom(
      from._internal_datacolumns());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.datatimestamps_ != nullptr);
    if (_this->_impl_.datatimestamps_ == nullptr) {
      _this->_impl_.datatimestamps_ =
          ::google::protobuf::Message::CopyConstruct<::DataTimestamps>(arena, *from._impl_.datatimestamps_);
    } else {
      _this->_impl_.datatimestamps_->MergeFrom(*from._impl_.datatimestamps_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IngestDataRequest_IngestionDataFrame::CopyFrom(const IngestDataRequest_IngestionDataFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dp.service.ingestion.IngestDataRequest.IngestionDataFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool IngestDataRequest_IngestionDataFrame::IsInitialized() const {
  return true;
}

void IngestDataRequest_IngestionDataFrame::InternalSwap(IngestDataRequest_IngestionDataFrame* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.datacolumns_.InternalSwap(&other->_impl_.datacolumns_);
  swap(_impl_.datatimestamps_, other->_impl_.datatimestamps_);
}

::google::protobuf::Metadata IngestDataRequest_IngestionDataFrame::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_ingestion_2eproto_getter,
                                   &descriptor_table_ingestion_2eproto_once,
                                   file_level_metadata_ingestion_2eproto[3]);
}
// ===================================================================

class IngestDataRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<IngestDataRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(IngestDataRequest, _impl_._has_bits_);
};

void IngestDataRequest::clear_requesttime() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.requesttime_ != nullptr) _impl_.requesttime_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void IngestDataRequest::clear_attributes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.attributes_.Clear();
}
void IngestDataRequest::clear_eventmetadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.eventmetadata_ != nullptr) _impl_.eventmetadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
IngestDataRequest::IngestDataRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dp.service.ingestion.IngestDataRequest)
}
inline PROTOBUF_NDEBUG_INLINE IngestDataRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        attributes_{visibility, arena, from.attributes_},
        clientrequestid_(arena, from.clientrequestid_) {}

IngestDataRequest::IngestDataRequest(
    ::google::protobuf::Arena* arena,
    const IngestDataRequest& from)
    : ::google::protobuf::Message(arena) {
  IngestDataRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.requesttime_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::Timestamp>(
                              arena, *from._impl_.requesttime_)
                        : nullptr;
  _impl_.eventmetadata_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::EventMetadata>(
                              arena, *from._impl_.eventmetadata_)
                        : nullptr;
  _impl_.ingestiondataframe_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::dp::service::ingestion::IngestDataRequest_IngestionDataFrame>(
                              arena, *from._impl_.ingestiondataframe_)
                        : nullptr;
  _impl_.providerid_ = from._impl_.providerid_;

  // @@protoc_insertion_point(copy_constructor:dp.service.ingestion.IngestDataRequest)
}
inline PROTOBUF_NDEBUG_INLINE IngestDataRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        attributes_{visibility, arena},
        clientrequestid_(arena) {}

inline void IngestDataRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, requesttime_),
           0,
           offsetof(Impl_, providerid_) -
               offsetof(Impl_, requesttime_) +
               sizeof(Impl_::providerid_));
}
IngestDataRequest::~IngestDataRequest() {
  // @@protoc_insertion_point(destructor:dp.service.ingestion.IngestDataRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IngestDataRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.clientrequestid_.Destroy();
  delete _impl_.requesttime_;
  delete _impl_.eventmetadata_;
  delete _impl_.ingestiondataframe_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
IngestDataRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(IngestDataRequest, _impl_._cached_size_),
              false,
          },
          &IngestDataRequest::MergeImpl,
          &IngestDataRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void IngestDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dp.service.ingestion.IngestDataRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.attributes_.Clear();
  _impl_.clientrequestid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.requesttime_ != nullptr);
      _impl_.requesttime_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.eventmetadata_ != nullptr);
      _impl_.eventmetadata_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.ingestiondataframe_ != nullptr);
      _impl_.ingestiondataframe_->Clear();
    }
  }
  _impl_.providerid_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* IngestDataRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 4, 62, 2> IngestDataRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(IngestDataRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_IngestDataRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dp::service::ingestion::IngestDataRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 providerId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IngestDataRequest, _impl_.providerid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(IngestDataRequest, _impl_.providerid_)}},
    // string clientRequestId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(IngestDataRequest, _impl_.clientrequestid_)}},
    // .Timestamp requestTime = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(IngestDataRequest, _impl_.requesttime_)}},
    // repeated .Attribute attributes = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(IngestDataRequest, _impl_.attributes_)}},
    // .EventMetadata eventMetadata = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 2, PROTOBUF_FIELD_OFFSET(IngestDataRequest, _impl_.eventmetadata_)}},
    // .dp.service.ingestion.IngestDataRequest.IngestionDataFrame ingestionDataFrame = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 2, 3, PROTOBUF_FIELD_OFFSET(IngestDataRequest, _impl_.ingestiondataframe_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 providerId = 1;
    {PROTOBUF_FIELD_OFFSET(IngestDataRequest, _impl_.providerid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string clientRequestId = 2;
    {PROTOBUF_FIELD_OFFSET(IngestDataRequest, _impl_.clientrequestid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .Timestamp requestTime = 3;
    {PROTOBUF_FIELD_OFFSET(IngestDataRequest, _impl_.requesttime_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .Attribute attributes = 4;
    {PROTOBUF_FIELD_OFFSET(IngestDataRequest, _impl_.attributes_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .EventMetadata eventMetadata = 5;
    {PROTOBUF_FIELD_OFFSET(IngestDataRequest, _impl_.eventmetadata_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dp.service.ingestion.IngestDataRequest.IngestionDataFrame ingestionDataFrame = 6;
    {PROTOBUF_FIELD_OFFSET(IngestDataRequest, _impl_.ingestiondataframe_), _Internal::kHasBitsOffset + 2, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Timestamp>()},
    {::_pbi::TcParser::GetTable<::Attribute>()},
    {::_pbi::TcParser::GetTable<::EventMetadata>()},
    {::_pbi::TcParser::GetTable<::dp::service::ingestion::IngestDataRequest_IngestionDataFrame>()},
  }}, {{
    "\46\0\17\0\0\0\0\0"
    "dp.service.ingestion.IngestDataRequest"
    "clientRequestId"
  }},
};

::uint8_t* IngestDataRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dp.service.ingestion.IngestDataRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 providerId = 1;
  if (this->_internal_providerid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_providerid(), target);
  }

  // string clientRequestId = 2;
  if (!this->_internal_clientrequestid().empty()) {
    const std::string& _s = this->_internal_clientrequestid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dp.service.ingestion.IngestDataRequest.clientRequestId");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .Timestamp requestTime = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.requesttime_, _impl_.requesttime_->GetCachedSize(), target, stream);
  }

  // repeated .Attribute attributes = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_attributes_size());
       i < n; i++) {
    const auto& repfield = this->_internal_attributes().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .EventMetadata eventMetadata = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.eventmetadata_, _impl_.eventmetadata_->GetCachedSize(), target, stream);
  }

  // .dp.service.ingestion.IngestDataRequest.IngestionDataFrame ingestionDataFrame = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.ingestiondataframe_, _impl_.ingestiondataframe_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dp.service.ingestion.IngestDataRequest)
  return target;
}

::size_t IngestDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dp.service.ingestion.IngestDataRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Attribute attributes = 4;
  total_size += 1UL * this->_internal_attributes_size();
  for (const auto& msg : this->_internal_attributes()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string clientRequestId = 2;
  if (!this->_internal_clientrequestid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_clientrequestid());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .Timestamp requestTime = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.requesttime_);
    }

    // .EventMetadata eventMetadata = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.eventmetadata_);
    }

    // .dp.service.ingestion.IngestDataRequest.IngestionDataFrame ingestionDataFrame = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.ingestiondataframe_);
    }

  }
  // uint32 providerId = 1;
  if (this->_internal_providerid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_providerid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void IngestDataRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IngestDataRequest*>(&to_msg);
  auto& from = static_cast<const IngestDataRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dp.service.ingestion.IngestDataRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_attributes()->MergeFrom(
      from._internal_attributes());
  if (!from._internal_clientrequestid().empty()) {
    _this->_internal_set_clientrequestid(from._internal_clientrequestid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.requesttime_ != nullptr);
      if (_this->_impl_.requesttime_ == nullptr) {
        _this->_impl_.requesttime_ =
            ::google::protobuf::Message::CopyConstruct<::Timestamp>(arena, *from._impl_.requesttime_);
      } else {
        _this->_impl_.requesttime_->MergeFrom(*from._impl_.requesttime_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.eventmetadata_ != nullptr);
      if (_this->_impl_.eventmetadata_ == nullptr) {
        _this->_impl_.eventmetadata_ =
            ::google::protobuf::Message::CopyConstruct<::EventMetadata>(arena, *from._impl_.eventmetadata_);
      } else {
        _this->_impl_.eventmetadata_->MergeFrom(*from._impl_.eventmetadata_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.ingestiondataframe_ != nullptr);
      if (_this->_impl_.ingestiondataframe_ == nullptr) {
        _this->_impl_.ingestiondataframe_ =
            ::google::protobuf::Message::CopyConstruct<::dp::service::ingestion::IngestDataRequest_IngestionDataFrame>(arena, *from._impl_.ingestiondataframe_);
      } else {
        _this->_impl_.ingestiondataframe_->MergeFrom(*from._impl_.ingestiondataframe_);
      }
    }
  }
  if (from._internal_providerid() != 0) {
    _this->_impl_.providerid_ = from._impl_.providerid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IngestDataRequest::CopyFrom(const IngestDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dp.service.ingestion.IngestDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool IngestDataRequest::IsInitialized() const {
  return true;
}

void IngestDataRequest::InternalSwap(IngestDataRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.attributes_.InternalSwap(&other->_impl_.attributes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.clientrequestid_, &other->_impl_.clientrequestid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IngestDataRequest, _impl_.providerid_)
      + sizeof(IngestDataRequest::_impl_.providerid_)
      - PROTOBUF_FIELD_OFFSET(IngestDataRequest, _impl_.requesttime_)>(
          reinterpret_cast<char*>(&_impl_.requesttime_),
          reinterpret_cast<char*>(&other->_impl_.requesttime_));
}

::google::protobuf::Metadata IngestDataRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_ingestion_2eproto_getter,
                                   &descriptor_table_ingestion_2eproto_once,
                                   file_level_metadata_ingestion_2eproto[4]);
}
// ===================================================================

class IngestDataResponse_AckResult::_Internal {
 public:
};

IngestDataResponse_AckResult::IngestDataResponse_AckResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dp.service.ingestion.IngestDataResponse.AckResult)
}
IngestDataResponse_AckResult::IngestDataResponse_AckResult(
    ::google::protobuf::Arena* arena, const IngestDataResponse_AckResult& from)
    : IngestDataResponse_AckResult(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE IngestDataResponse_AckResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void IngestDataResponse_AckResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, numrows_),
           0,
           offsetof(Impl_, numcolumns_) -
               offsetof(Impl_, numrows_) +
               sizeof(Impl_::numcolumns_));
}
IngestDataResponse_AckResult::~IngestDataResponse_AckResult() {
  // @@protoc_insertion_point(destructor:dp.service.ingestion.IngestDataResponse.AckResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IngestDataResponse_AckResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
IngestDataResponse_AckResult::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(IngestDataResponse_AckResult, _impl_._cached_size_),
              false,
          },
          &IngestDataResponse_AckResult::MergeImpl,
          &IngestDataResponse_AckResult::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void IngestDataResponse_AckResult::Clear() {
// @@protoc_insertion_point(message_clear_start:dp.service.ingestion.IngestDataResponse.AckResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.numrows_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.numcolumns_) -
      reinterpret_cast<char*>(&_impl_.numrows_)) + sizeof(_impl_.numcolumns_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* IngestDataResponse_AckResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> IngestDataResponse_AckResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_IngestDataResponse_AckResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dp::service::ingestion::IngestDataResponse_AckResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 numColumns = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IngestDataResponse_AckResult, _impl_.numcolumns_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(IngestDataResponse_AckResult, _impl_.numcolumns_)}},
    // uint32 numRows = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IngestDataResponse_AckResult, _impl_.numrows_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(IngestDataResponse_AckResult, _impl_.numrows_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 numRows = 1;
    {PROTOBUF_FIELD_OFFSET(IngestDataResponse_AckResult, _impl_.numrows_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 numColumns = 2;
    {PROTOBUF_FIELD_OFFSET(IngestDataResponse_AckResult, _impl_.numcolumns_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* IngestDataResponse_AckResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dp.service.ingestion.IngestDataResponse.AckResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 numRows = 1;
  if (this->_internal_numrows() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_numrows(), target);
  }

  // uint32 numColumns = 2;
  if (this->_internal_numcolumns() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_numcolumns(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dp.service.ingestion.IngestDataResponse.AckResult)
  return target;
}

::size_t IngestDataResponse_AckResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dp.service.ingestion.IngestDataResponse.AckResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 numRows = 1;
  if (this->_internal_numrows() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_numrows());
  }

  // uint32 numColumns = 2;
  if (this->_internal_numcolumns() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_numcolumns());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void IngestDataResponse_AckResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IngestDataResponse_AckResult*>(&to_msg);
  auto& from = static_cast<const IngestDataResponse_AckResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dp.service.ingestion.IngestDataResponse.AckResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_numrows() != 0) {
    _this->_impl_.numrows_ = from._impl_.numrows_;
  }
  if (from._internal_numcolumns() != 0) {
    _this->_impl_.numcolumns_ = from._impl_.numcolumns_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IngestDataResponse_AckResult::CopyFrom(const IngestDataResponse_AckResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dp.service.ingestion.IngestDataResponse.AckResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool IngestDataResponse_AckResult::IsInitialized() const {
  return true;
}

void IngestDataResponse_AckResult::InternalSwap(IngestDataResponse_AckResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IngestDataResponse_AckResult, _impl_.numcolumns_)
      + sizeof(IngestDataResponse_AckResult::_impl_.numcolumns_)
      - PROTOBUF_FIELD_OFFSET(IngestDataResponse_AckResult, _impl_.numrows_)>(
          reinterpret_cast<char*>(&_impl_.numrows_),
          reinterpret_cast<char*>(&other->_impl_.numrows_));
}

::google::protobuf::Metadata IngestDataResponse_AckResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_ingestion_2eproto_getter,
                                   &descriptor_table_ingestion_2eproto_once,
                                   file_level_metadata_ingestion_2eproto[5]);
}
// ===================================================================

class IngestDataResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<IngestDataResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(IngestDataResponse, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::dp::service::ingestion::IngestDataResponse, _impl_._oneof_case_);
};

void IngestDataResponse::clear_responsetime() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.responsetime_ != nullptr) _impl_.responsetime_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void IngestDataResponse::set_allocated_exceptionalresult(::ExceptionalResult* exceptionalresult) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_result();
  if (exceptionalresult) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(exceptionalresult)->GetArena();
    if (message_arena != submessage_arena) {
      exceptionalresult = ::google::protobuf::internal::GetOwnedMessage(message_arena, exceptionalresult, submessage_arena);
    }
    set_has_exceptionalresult();
    _impl_.result_.exceptionalresult_ = exceptionalresult;
  }
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.IngestDataResponse.exceptionalResult)
}
void IngestDataResponse::clear_exceptionalresult() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (result_case() == kExceptionalResult) {
    if (GetArena() == nullptr) {
      delete _impl_.result_.exceptionalresult_;
    }
    clear_has_result();
  }
}
void IngestDataResponse::set_allocated_ackresult(::dp::service::ingestion::IngestDataResponse_AckResult* ackresult) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_result();
  if (ackresult) {
    ::google::protobuf::Arena* submessage_arena = ackresult->GetArena();
    if (message_arena != submessage_arena) {
      ackresult = ::google::protobuf::internal::GetOwnedMessage(message_arena, ackresult, submessage_arena);
    }
    set_has_ackresult();
    _impl_.result_.ackresult_ = ackresult;
  }
  // @@protoc_insertion_point(field_set_allocated:dp.service.ingestion.IngestDataResponse.ackResult)
}
IngestDataResponse::IngestDataResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dp.service.ingestion.IngestDataResponse)
}
inline PROTOBUF_NDEBUG_INLINE IngestDataResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        clientrequestid_(arena, from.clientrequestid_),
        result_{},
        _oneof_case_{from._oneof_case_[0]} {}

IngestDataResponse::IngestDataResponse(
    ::google::protobuf::Arena* arena,
    const IngestDataResponse& from)
    : ::google::protobuf::Message(arena) {
  IngestDataResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.responsetime_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::Timestamp>(
                              arena, *from._impl_.responsetime_)
                        : nullptr;
  _impl_.providerid_ = from._impl_.providerid_;
  switch (result_case()) {
    case RESULT_NOT_SET:
      break;
      case kExceptionalResult:
        _impl_.result_.exceptionalresult_ = ::google::protobuf::Message::CopyConstruct<::ExceptionalResult>(arena, *from._impl_.result_.exceptionalresult_);
        break;
      case kAckResult:
        _impl_.result_.ackresult_ = ::google::protobuf::Message::CopyConstruct<::dp::service::ingestion::IngestDataResponse_AckResult>(arena, *from._impl_.result_.ackresult_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:dp.service.ingestion.IngestDataResponse)
}
inline PROTOBUF_NDEBUG_INLINE IngestDataResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        clientrequestid_(arena),
        result_{},
        _oneof_case_{} {}

inline void IngestDataResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, responsetime_),
           0,
           offsetof(Impl_, providerid_) -
               offsetof(Impl_, responsetime_) +
               sizeof(Impl_::providerid_));
}
IngestDataResponse::~IngestDataResponse() {
  // @@protoc_insertion_point(destructor:dp.service.ingestion.IngestDataResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IngestDataResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.clientrequestid_.Destroy();
  delete _impl_.responsetime_;
  if (has_result()) {
    clear_result();
  }
  _impl_.~Impl_();
}

void IngestDataResponse::clear_result() {
// @@protoc_insertion_point(one_of_clear_start:dp.service.ingestion.IngestDataResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (result_case()) {
    case kExceptionalResult: {
      if (GetArena() == nullptr) {
        delete _impl_.result_.exceptionalresult_;
      }
      break;
    }
    case kAckResult: {
      if (GetArena() == nullptr) {
        delete _impl_.result_.ackresult_;
      }
      break;
    }
    case RESULT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESULT_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
IngestDataResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(IngestDataResponse, _impl_._cached_size_),
              false,
          },
          &IngestDataResponse::MergeImpl,
          &IngestDataResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void IngestDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dp.service.ingestion.IngestDataResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.clientrequestid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.responsetime_ != nullptr);
    _impl_.responsetime_->Clear();
  }
  _impl_.providerid_ = 0u;
  clear_result();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* IngestDataResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 3, 63, 2> IngestDataResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(IngestDataResponse, _impl_._has_bits_),
    0, // no _extensions_
    11, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965752,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_IngestDataResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dp::service::ingestion::IngestDataResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 providerId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IngestDataResponse, _impl_.providerid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(IngestDataResponse, _impl_.providerid_)}},
    // string clientRequestId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(IngestDataResponse, _impl_.clientrequestid_)}},
    // .Timestamp responseTime = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(IngestDataResponse, _impl_.responsetime_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 providerId = 1;
    {PROTOBUF_FIELD_OFFSET(IngestDataResponse, _impl_.providerid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string clientRequestId = 2;
    {PROTOBUF_FIELD_OFFSET(IngestDataResponse, _impl_.clientrequestid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .Timestamp responseTime = 3;
    {PROTOBUF_FIELD_OFFSET(IngestDataResponse, _impl_.responsetime_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ExceptionalResult exceptionalResult = 10;
    {PROTOBUF_FIELD_OFFSET(IngestDataResponse, _impl_.result_.exceptionalresult_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dp.service.ingestion.IngestDataResponse.AckResult ackResult = 11;
    {PROTOBUF_FIELD_OFFSET(IngestDataResponse, _impl_.result_.ackresult_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Timestamp>()},
    {::_pbi::TcParser::GetTable<::ExceptionalResult>()},
    {::_pbi::TcParser::GetTable<::dp::service::ingestion::IngestDataResponse_AckResult>()},
  }}, {{
    "\47\0\17\0\0\0\0\0"
    "dp.service.ingestion.IngestDataResponse"
    "clientRequestId"
  }},
};

::uint8_t* IngestDataResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dp.service.ingestion.IngestDataResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 providerId = 1;
  if (this->_internal_providerid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_providerid(), target);
  }

  // string clientRequestId = 2;
  if (!this->_internal_clientrequestid().empty()) {
    const std::string& _s = this->_internal_clientrequestid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dp.service.ingestion.IngestDataResponse.clientRequestId");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .Timestamp responseTime = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.responsetime_, _impl_.responsetime_->GetCachedSize(), target, stream);
  }

  switch (result_case()) {
    case kExceptionalResult: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          10, *_impl_.result_.exceptionalresult_, _impl_.result_.exceptionalresult_->GetCachedSize(), target, stream);
      break;
    }
    case kAckResult: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          11, *_impl_.result_.ackresult_, _impl_.result_.ackresult_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dp.service.ingestion.IngestDataResponse)
  return target;
}

::size_t IngestDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dp.service.ingestion.IngestDataResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string clientRequestId = 2;
  if (!this->_internal_clientrequestid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_clientrequestid());
  }

  // .Timestamp responseTime = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.responsetime_);
  }

  // uint32 providerId = 1;
  if (this->_internal_providerid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_providerid());
  }

  switch (result_case()) {
    // .ExceptionalResult exceptionalResult = 10;
    case kExceptionalResult: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.result_.exceptionalresult_);
      break;
    }
    // .dp.service.ingestion.IngestDataResponse.AckResult ackResult = 11;
    case kAckResult: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.result_.ackresult_);
      break;
    }
    case RESULT_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void IngestDataResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IngestDataResponse*>(&to_msg);
  auto& from = static_cast<const IngestDataResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dp.service.ingestion.IngestDataResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_clientrequestid().empty()) {
    _this->_internal_set_clientrequestid(from._internal_clientrequestid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.responsetime_ != nullptr);
    if (_this->_impl_.responsetime_ == nullptr) {
      _this->_impl_.responsetime_ =
          ::google::protobuf::Message::CopyConstruct<::Timestamp>(arena, *from._impl_.responsetime_);
    } else {
      _this->_impl_.responsetime_->MergeFrom(*from._impl_.responsetime_);
    }
  }
  if (from._internal_providerid() != 0) {
    _this->_impl_.providerid_ = from._impl_.providerid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_result();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kExceptionalResult: {
        if (oneof_needs_init) {
          _this->_impl_.result_.exceptionalresult_ =
              ::google::protobuf::Message::CopyConstruct<::ExceptionalResult>(arena, *from._impl_.result_.exceptionalresult_);
        } else {
          _this->_impl_.result_.exceptionalresult_->MergeFrom(from._internal_exceptionalresult());
        }
        break;
      }
      case kAckResult: {
        if (oneof_needs_init) {
          _this->_impl_.result_.ackresult_ =
              ::google::protobuf::Message::CopyConstruct<::dp::service::ingestion::IngestDataResponse_AckResult>(arena, *from._impl_.result_.ackresult_);
        } else {
          _this->_impl_.result_.ackresult_->MergeFrom(from._internal_ackresult());
        }
        break;
      }
      case RESULT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IngestDataResponse::CopyFrom(const IngestDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dp.service.ingestion.IngestDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool IngestDataResponse::IsInitialized() const {
  return true;
}

void IngestDataResponse::InternalSwap(IngestDataResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.clientrequestid_, &other->_impl_.clientrequestid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IngestDataResponse, _impl_.providerid_)
      + sizeof(IngestDataResponse::_impl_.providerid_)
      - PROTOBUF_FIELD_OFFSET(IngestDataResponse, _impl_.responsetime_)>(
          reinterpret_cast<char*>(&_impl_.responsetime_),
          reinterpret_cast<char*>(&other->_impl_.responsetime_));
  swap(_impl_.result_, other->_impl_.result_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata IngestDataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_ingestion_2eproto_getter,
                                   &descriptor_table_ingestion_2eproto_once,
                                   file_level_metadata_ingestion_2eproto[6]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace ingestion
}  // namespace service
}  // namespace dp
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_ingestion_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
